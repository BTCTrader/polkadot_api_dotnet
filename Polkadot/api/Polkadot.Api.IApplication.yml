### YamlMime:ManagedReference
items:
- uid: Polkadot.Api.IApplication
  commentId: T:Polkadot.Api.IApplication
  id: IApplication
  parent: Polkadot.Api
  children:
  - Polkadot.Api.IApplication.Connect(System.String)
  - Polkadot.Api.IApplication.Disconnect
  - Polkadot.Api.IApplication.GetBlock(Polkadot.Data.GetBlockParams)
  - Polkadot.Api.IApplication.GetBlockHash(Polkadot.Data.GetBlockHashParams)
  - Polkadot.Api.IApplication.GetBlockHeader(Polkadot.Data.GetBlockParams)
  - Polkadot.Api.IApplication.GetChildKeys(System.String,System.String)
  - Polkadot.Api.IApplication.GetChildStorage(System.String,System.String)
  - Polkadot.Api.IApplication.GetChildStorageHash(System.String,System.String)
  - Polkadot.Api.IApplication.GetChildStorageSize(System.String,System.String)
  - Polkadot.Api.IApplication.GetFinalizedHead
  - Polkadot.Api.IApplication.GetKeys(System.String,System.String,System.String)
  - Polkadot.Api.IApplication.GetMetadata(Polkadot.Data.GetMetadataParams)
  - Polkadot.Api.IApplication.GetNetworkState
  - Polkadot.Api.IApplication.GetRuntimeVersion(Polkadot.Data.GetRuntimeVersionParams)
  - Polkadot.Api.IApplication.GetStorage(System.String,System.String,System.String)
  - Polkadot.Api.IApplication.GetStorageHash(System.String,System.String,System.String)
  - Polkadot.Api.IApplication.GetStorageSize(System.String,System.String,System.String)
  - Polkadot.Api.IApplication.GetSystemInfo
  - Polkadot.Api.IApplication.QueryStorage(System.String,System.String,System.String,System.Int32)
  - Polkadot.Api.IApplication.SubscribeBlockNumber(System.Action{System.Int64})
  - Polkadot.Api.IApplication.SubscribeRuntimeVersion(System.Action{Polkadot.Data.RuntimeVersion})
  - Polkadot.Api.IApplication.UnsubscribeBlockNumber(System.Int32)
  - Polkadot.Api.IApplication.UnsubscribeRuntimeVersion(System.Int32)
  langs:
  - csharp
  - vb
  name: IApplication
  nameWithType: IApplication
  fullName: Polkadot.Api.IApplication
  type: Interface
  source:
    remote:
      path: Polkadot/src/Api/Application/IApplication.cs
      branch: Sprint_6_Complitely
      repo: https://github.com/usetech-llc/polkadot_api_dotnet.git
    id: IApplication
    path: src/Api/Application/IApplication.cs
    startLine: 6
  assemblies:
  - Polkadot
  namespace: Polkadot.Api
  syntax:
    content: 'public interface IApplication : IDisposable'
    content.vb: >-
      Public Interface IApplication

          Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Polkadot.Api.IApplication.Connect(System.String)
  commentId: M:Polkadot.Api.IApplication.Connect(System.String)
  id: Connect(System.String)
  parent: Polkadot.Api.IApplication
  langs:
  - csharp
  - vb
  name: Connect(String)
  nameWithType: IApplication.Connect(String)
  fullName: Polkadot.Api.IApplication.Connect(System.String)
  type: Method
  source:
    remote:
      path: Polkadot/src/Api/Application/IApplication.cs
      branch: Sprint_6_Complitely
      repo: https://github.com/usetech-llc/polkadot_api_dotnet.git
    id: Connect
    path: src/Api/Application/IApplication.cs
    startLine: 8
  assemblies:
  - Polkadot
  namespace: Polkadot.Api
  syntax:
    content: int Connect(string node_url = "")
    parameters:
    - id: node_url
      type: System.String
    return:
      type: System.Int32
    content.vb: Function Connect(node_url As String = "") As Integer
  overload: Polkadot.Api.IApplication.Connect*
- uid: Polkadot.Api.IApplication.Disconnect
  commentId: M:Polkadot.Api.IApplication.Disconnect
  id: Disconnect
  parent: Polkadot.Api.IApplication
  langs:
  - csharp
  - vb
  name: Disconnect()
  nameWithType: IApplication.Disconnect()
  fullName: Polkadot.Api.IApplication.Disconnect()
  type: Method
  source:
    remote:
      path: Polkadot/src/Api/Application/IApplication.cs
      branch: Sprint_6_Complitely
      repo: https://github.com/usetech-llc/polkadot_api_dotnet.git
    id: Disconnect
    path: src/Api/Application/IApplication.cs
    startLine: 10
  assemblies:
  - Polkadot
  namespace: Polkadot.Api
  syntax:
    content: void Disconnect()
    content.vb: Sub Disconnect
  overload: Polkadot.Api.IApplication.Disconnect*
- uid: Polkadot.Api.IApplication.GetSystemInfo
  commentId: M:Polkadot.Api.IApplication.GetSystemInfo
  id: GetSystemInfo
  parent: Polkadot.Api.IApplication
  langs:
  - csharp
  - vb
  name: GetSystemInfo()
  nameWithType: IApplication.GetSystemInfo()
  fullName: Polkadot.Api.IApplication.GetSystemInfo()
  type: Method
  source:
    remote:
      path: Polkadot/src/Api/Application/IApplication.cs
      branch: Sprint_6_Complitely
      repo: https://github.com/usetech-llc/polkadot_api_dotnet.git
    id: GetSystemInfo
    path: src/Api/Application/IApplication.cs
    startLine: 19
  assemblies:
  - Polkadot
  namespace: Polkadot.Api
  summary: "\nCall 4 methods and put them together in a single object\nsystem_chain\nsystem_name\nsystem_version\nsystem_properties\n"
  example: []
  syntax:
    content: SystemInfo GetSystemInfo()
    return:
      type: Polkadot.Data.SystemInfo
    content.vb: Function GetSystemInfo As SystemInfo
  overload: Polkadot.Api.IApplication.GetSystemInfo*
- uid: Polkadot.Api.IApplication.GetBlockHash(Polkadot.Data.GetBlockHashParams)
  commentId: M:Polkadot.Api.IApplication.GetBlockHash(Polkadot.Data.GetBlockHashParams)
  id: GetBlockHash(Polkadot.Data.GetBlockHashParams)
  parent: Polkadot.Api.IApplication
  langs:
  - csharp
  - vb
  name: GetBlockHash(GetBlockHashParams)
  nameWithType: IApplication.GetBlockHash(GetBlockHashParams)
  fullName: Polkadot.Api.IApplication.GetBlockHash(Polkadot.Data.GetBlockHashParams)
  type: Method
  source:
    remote:
      path: Polkadot/src/Api/Application/IApplication.cs
      branch: Sprint_6_Complitely
      repo: https://github.com/usetech-llc/polkadot_api_dotnet.git
    id: GetBlockHash
    path: src/Api/Application/IApplication.cs
    startLine: 26
  assemblies:
  - Polkadot
  namespace: Polkadot.Api
  summary: "\nRetreives the block hash for specific block\n"
  example: []
  syntax:
    content: BlockHash GetBlockHash(GetBlockHashParams param)
    parameters:
    - id: param
      type: Polkadot.Data.GetBlockHashParams
    return:
      type: Polkadot.Data.BlockHash
      description: 'BlockHash struct with result '
    content.vb: Function GetBlockHash(param As GetBlockHashParams) As BlockHash
  overload: Polkadot.Api.IApplication.GetBlockHash*
- uid: Polkadot.Api.IApplication.GetRuntimeVersion(Polkadot.Data.GetRuntimeVersionParams)
  commentId: M:Polkadot.Api.IApplication.GetRuntimeVersion(Polkadot.Data.GetRuntimeVersionParams)
  id: GetRuntimeVersion(Polkadot.Data.GetRuntimeVersionParams)
  parent: Polkadot.Api.IApplication
  langs:
  - csharp
  - vb
  name: GetRuntimeVersion(GetRuntimeVersionParams)
  nameWithType: IApplication.GetRuntimeVersion(GetRuntimeVersionParams)
  fullName: Polkadot.Api.IApplication.GetRuntimeVersion(Polkadot.Data.GetRuntimeVersionParams)
  type: Method
  source:
    remote:
      path: Polkadot/src/Api/Application/IApplication.cs
      branch: Sprint_6_Complitely
      repo: https://github.com/usetech-llc/polkadot_api_dotnet.git
    id: GetRuntimeVersion
    path: src/Api/Application/IApplication.cs
    startLine: 33
  assemblies:
  - Polkadot
  namespace: Polkadot.Api
  summary: "\nRetreives the runtime version information for specific block\n"
  example: []
  syntax:
    content: RuntimeVersion GetRuntimeVersion(GetRuntimeVersionParams param)
    parameters:
    - id: param
      type: Polkadot.Data.GetRuntimeVersionParams
    return:
      type: Polkadot.Data.RuntimeVersion
      description: 'RuntimeVersion struct with result '
    content.vb: Function GetRuntimeVersion(param As GetRuntimeVersionParams) As RuntimeVersion
  overload: Polkadot.Api.IApplication.GetRuntimeVersion*
- uid: Polkadot.Api.IApplication.GetBlock(Polkadot.Data.GetBlockParams)
  commentId: M:Polkadot.Api.IApplication.GetBlock(Polkadot.Data.GetBlockParams)
  id: GetBlock(Polkadot.Data.GetBlockParams)
  parent: Polkadot.Api.IApplication
  langs:
  - csharp
  - vb
  name: GetBlock(GetBlockParams)
  nameWithType: IApplication.GetBlock(GetBlockParams)
  fullName: Polkadot.Api.IApplication.GetBlock(Polkadot.Data.GetBlockParams)
  type: Method
  source:
    remote:
      path: Polkadot/src/Api/Application/IApplication.cs
      branch: Sprint_6_Complitely
      repo: https://github.com/usetech-llc/polkadot_api_dotnet.git
    id: GetBlock
    path: src/Api/Application/IApplication.cs
    startLine: 40
  assemblies:
  - Polkadot
  namespace: Polkadot.Api
  summary: "\nGet header and body of a relay chain block\n"
  example: []
  syntax:
    content: SignedBlock GetBlock(GetBlockParams param)
    parameters:
    - id: param
      type: Polkadot.Data.GetBlockParams
    return:
      type: Polkadot.Data.SignedBlock
      description: 'SignedBlock struct with result '
    content.vb: Function GetBlock(param As GetBlockParams) As SignedBlock
  overload: Polkadot.Api.IApplication.GetBlock*
- uid: Polkadot.Api.IApplication.GetBlockHeader(Polkadot.Data.GetBlockParams)
  commentId: M:Polkadot.Api.IApplication.GetBlockHeader(Polkadot.Data.GetBlockParams)
  id: GetBlockHeader(Polkadot.Data.GetBlockParams)
  parent: Polkadot.Api.IApplication
  langs:
  - csharp
  - vb
  name: GetBlockHeader(GetBlockParams)
  nameWithType: IApplication.GetBlockHeader(GetBlockParams)
  fullName: Polkadot.Api.IApplication.GetBlockHeader(Polkadot.Data.GetBlockParams)
  type: Method
  source:
    remote:
      path: Polkadot/src/Api/Application/IApplication.cs
      branch: Sprint_6_Complitely
      repo: https://github.com/usetech-llc/polkadot_api_dotnet.git
    id: GetBlockHeader
    path: src/Api/Application/IApplication.cs
    startLine: 47
  assemblies:
  - Polkadot
  namespace: Polkadot.Api
  summary: "\nRetrieves the header for a specific block\n"
  example: []
  syntax:
    content: BlockHeader GetBlockHeader(GetBlockParams param)
    parameters:
    - id: param
      type: Polkadot.Data.GetBlockParams
      description: 'struct with blockHash 64 diget number in hex format '
    return:
      type: Polkadot.Data.BlockHeader
      description: 'BlockHeader struct with result '
    content.vb: Function GetBlockHeader(param As GetBlockParams) As BlockHeader
  overload: Polkadot.Api.IApplication.GetBlockHeader*
- uid: Polkadot.Api.IApplication.GetNetworkState
  commentId: M:Polkadot.Api.IApplication.GetNetworkState
  id: GetNetworkState
  parent: Polkadot.Api.IApplication
  langs:
  - csharp
  - vb
  name: GetNetworkState()
  nameWithType: IApplication.GetNetworkState()
  fullName: Polkadot.Api.IApplication.GetNetworkState()
  type: Method
  source:
    remote:
      path: Polkadot/src/Api/Application/IApplication.cs
      branch: Sprint_6_Complitely
      repo: https://github.com/usetech-llc/polkadot_api_dotnet.git
    id: GetNetworkState
    path: src/Api/Application/IApplication.cs
    startLine: 55
  assemblies:
  - Polkadot
  namespace: Polkadot.Api
  summary: "\nReturns current state of the network\n"
  example: []
  syntax:
    content: NetworkState GetNetworkState()
    return:
      type: Polkadot.Data.NetworkState
      description: "\nNetworkState struct with result\n"
    content.vb: Function GetNetworkState As NetworkState
  overload: Polkadot.Api.IApplication.GetNetworkState*
- uid: Polkadot.Api.IApplication.GetFinalizedHead
  commentId: M:Polkadot.Api.IApplication.GetFinalizedHead
  id: GetFinalizedHead
  parent: Polkadot.Api.IApplication
  langs:
  - csharp
  - vb
  name: GetFinalizedHead()
  nameWithType: IApplication.GetFinalizedHead()
  fullName: Polkadot.Api.IApplication.GetFinalizedHead()
  type: Method
  source:
    remote:
      path: Polkadot/src/Api/Application/IApplication.cs
      branch: Sprint_6_Complitely
      repo: https://github.com/usetech-llc/polkadot_api_dotnet.git
    id: GetFinalizedHead
    path: src/Api/Application/IApplication.cs
    startLine: 61
  assemblies:
  - Polkadot
  namespace: Polkadot.Api
  summary: "\nGet hash of the last finalized block in the chain\n"
  example: []
  syntax:
    content: FinalHead GetFinalizedHead()
    return:
      type: Polkadot.Data.FinalHead
      description: 'FinalHead struct with result '
    content.vb: Function GetFinalizedHead As FinalHead
  overload: Polkadot.Api.IApplication.GetFinalizedHead*
- uid: Polkadot.Api.IApplication.GetMetadata(Polkadot.Data.GetMetadataParams)
  commentId: M:Polkadot.Api.IApplication.GetMetadata(Polkadot.Data.GetMetadataParams)
  id: GetMetadata(Polkadot.Data.GetMetadataParams)
  parent: Polkadot.Api.IApplication
  langs:
  - csharp
  - vb
  name: GetMetadata(GetMetadataParams)
  nameWithType: IApplication.GetMetadata(GetMetadataParams)
  fullName: Polkadot.Api.IApplication.GetMetadata(Polkadot.Data.GetMetadataParams)
  type: Method
  source:
    remote:
      path: Polkadot/src/Api/Application/IApplication.cs
      branch: Sprint_6_Complitely
      repo: https://github.com/usetech-llc/polkadot_api_dotnet.git
    id: GetMetadata
    path: src/Api/Application/IApplication.cs
    startLine: 68
  assemblies:
  - Polkadot
  namespace: Polkadot.Api
  summary: "\nRetreives the runtime metadata for specific block\n"
  example: []
  syntax:
    content: MetadataBase GetMetadata(GetMetadataParams param)
    parameters:
    - id: param
      type: Polkadot.Data.GetMetadataParams
      description: 'struct with blockHash 64 diget number in hex format '
    return:
      type: Polkadot.DataStructs.Metadata.MetadataBase
      description: 'Metadata struct with result '
    content.vb: Function GetMetadata(param As GetMetadataParams) As MetadataBase
  overload: Polkadot.Api.IApplication.GetMetadata*
- uid: Polkadot.Api.IApplication.GetKeys(System.String,System.String,System.String)
  commentId: M:Polkadot.Api.IApplication.GetKeys(System.String,System.String,System.String)
  id: GetKeys(System.String,System.String,System.String)
  parent: Polkadot.Api.IApplication
  langs:
  - csharp
  - vb
  name: GetKeys(String, String, String)
  nameWithType: IApplication.GetKeys(String, String, String)
  fullName: Polkadot.Api.IApplication.GetKeys(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: Polkadot/src/Api/Application/IApplication.cs
      branch: Sprint_6_Complitely
      repo: https://github.com/usetech-llc/polkadot_api_dotnet.git
    id: GetKeys
    path: src/Api/Application/IApplication.cs
    startLine: 84
  assemblies:
  - Polkadot
  namespace: Polkadot.Api
  summary: "\nGenerates storage key for a certain Module and State variable defined by parameter and prefix. Parameter is a JSON\nstring representing a value of certain type, which has two fields: type and value.Type should be one of type\nstrings defined above.Value should correspond to the type.Example:\n\n{ &quot;type&quot; : &quot;AccountId&quot;, &quot;value&quot; : &quot;5ECcjykmdAQK71qHBCkEWpWkoMJY6NXvpdKy8UeMx16q5gFr&quot;}\n\nInformation about Modules and State variables(with parameters and their types) is returned by getMetadata\nmethod.\n"
  example: []
  syntax:
    content: string GetKeys(string jsonPrm, string module, string variable)
    parameters:
    - id: jsonPrm
      type: System.String
      description: JSON string that contains parameter and its type
    - id: module
      type: System.String
      description: module (as in metadata)
    - id: variable
      type: System.String
      description: state variable (as in metadata for given module)
    return:
      type: System.String
      description: 'Storage key '
    content.vb: Function GetKeys(jsonPrm As String, module As String, variable As String) As String
  overload: Polkadot.Api.IApplication.GetKeys*
- uid: Polkadot.Api.IApplication.GetStorage(System.String,System.String,System.String)
  commentId: M:Polkadot.Api.IApplication.GetStorage(System.String,System.String,System.String)
  id: GetStorage(System.String,System.String,System.String)
  parent: Polkadot.Api.IApplication
  langs:
  - csharp
  - vb
  name: GetStorage(String, String, String)
  nameWithType: IApplication.GetStorage(String, String, String)
  fullName: Polkadot.Api.IApplication.GetStorage(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: Polkadot/src/Api/Application/IApplication.cs
      branch: Sprint_6_Complitely
      repo: https://github.com/usetech-llc/polkadot_api_dotnet.git
    id: GetStorage
    path: src/Api/Application/IApplication.cs
    startLine: 100
  assemblies:
  - Polkadot
  namespace: Polkadot.Api
  summary: "\nReads storage for a certain Module and State variable defined by parameter and prefix.Parameter is a JSON\nstring representing a value of certain type, which has two fields: type and value.Type should be one of type\nstrings defined above.Value should correspond to the type.Example:\n\n{ &quot;type&quot; : &quot;AccountId&quot;, &quot;value&quot; : &quot;5ECcjykmdAQK71qHBCkEWpWkoMJY6NXvpdKy8UeMx16q5gFr&quot;}\n\nInformation about Modules and State variables(with parameters and their types) is returned by getMetadata\nmethod.\n"
  example: []
  syntax:
    content: string GetStorage(string jsonPrm, string module, string variable)
    parameters:
    - id: jsonPrm
      type: System.String
      description: JSON string that contains parameter and its type
    - id: module
      type: System.String
      description: module (as in metadata)
    - id: variable
      type: System.String
      description: state variable (as in metadata for given module)
    return:
      type: System.String
      description: 'Storage content '
    content.vb: Function GetStorage(jsonPrm As String, module As String, variable As String) As String
  overload: Polkadot.Api.IApplication.GetStorage*
- uid: Polkadot.Api.IApplication.GetStorageHash(System.String,System.String,System.String)
  commentId: M:Polkadot.Api.IApplication.GetStorageHash(System.String,System.String,System.String)
  id: GetStorageHash(System.String,System.String,System.String)
  parent: Polkadot.Api.IApplication
  langs:
  - csharp
  - vb
  name: GetStorageHash(String, String, String)
  nameWithType: IApplication.GetStorageHash(String, String, String)
  fullName: Polkadot.Api.IApplication.GetStorageHash(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: Polkadot/src/Api/Application/IApplication.cs
      branch: Sprint_6_Complitely
      repo: https://github.com/usetech-llc/polkadot_api_dotnet.git
    id: GetStorageHash
    path: src/Api/Application/IApplication.cs
    startLine: 116
  assemblies:
  - Polkadot
  namespace: Polkadot.Api
  summary: "\nReturns storage hash of given State Variable for a given Module defined by parameter.\nParameter is a JSON string representing a value of certain type, which has two fields: type and value.Type\nshould be one of type strings defined above.Value should correspond to the type. Example:\n\n{ &quot;type&quot; : &quot;AccountId&quot;, &quot;value&quot; : &quot;5ECcjykmdAQK71qHBCkEWpWkoMJY6NXvpdKy8UeMx16q5gFr&quot;}\n\nInformation about Modules and State variables(with parameters and their types) is returned by getMetadata\nmethod.\n"
  example: []
  syntax:
    content: string GetStorageHash(string jsonPrm, string module, string variable)
    parameters:
    - id: jsonPrm
      type: System.String
      description: JSON string that contains parameter and its type
    - id: module
      type: System.String
      description: module (as in metadata)
    - id: variable
      type: System.String
      description: state variable (as in metadata for given module)
    return:
      type: System.String
      description: 'Storage hash '
    content.vb: Function GetStorageHash(jsonPrm As String, module As String, variable As String) As String
  overload: Polkadot.Api.IApplication.GetStorageHash*
- uid: Polkadot.Api.IApplication.GetStorageSize(System.String,System.String,System.String)
  commentId: M:Polkadot.Api.IApplication.GetStorageSize(System.String,System.String,System.String)
  id: GetStorageSize(System.String,System.String,System.String)
  parent: Polkadot.Api.IApplication
  langs:
  - csharp
  - vb
  name: GetStorageSize(String, String, String)
  nameWithType: IApplication.GetStorageSize(String, String, String)
  fullName: Polkadot.Api.IApplication.GetStorageSize(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: Polkadot/src/Api/Application/IApplication.cs
      branch: Sprint_6_Complitely
      repo: https://github.com/usetech-llc/polkadot_api_dotnet.git
    id: GetStorageSize
    path: src/Api/Application/IApplication.cs
    startLine: 132
  assemblies:
  - Polkadot
  namespace: Polkadot.Api
  summary: "\nReturns storage size for a given State Variable for a given Module defined by parameter.\nParameter is a JSON string representing a value of certain type, which has two fields: type and value.Type\nshould be one of type strings defined above.Value should correspond to the type. Example:\n\n{ &quot;type&quot; : &quot;AccountId&quot;, &quot;value&quot; : &quot;5ECcjykmdAQK71qHBCkEWpWkoMJY6NXvpdKy8UeMx16q5gFr&quot;}\n\nInformation about Modules and State variables(with parameters and their types) is returned by getMetadata\nmethod.\n"
  example: []
  syntax:
    content: int GetStorageSize(string jsonPrm, string module, string variable)
    parameters:
    - id: jsonPrm
      type: System.String
      description: JSON string that contains parameter and its type
    - id: module
      type: System.String
      description: module (as in metadata)
    - id: variable
      type: System.String
      description: state variable (as in metadata for given module)
    return:
      type: System.Int32
      description: 'Storage size '
    content.vb: Function GetStorageSize(jsonPrm As String, module As String, variable As String) As Integer
  overload: Polkadot.Api.IApplication.GetStorageSize*
- uid: Polkadot.Api.IApplication.GetChildKeys(System.String,System.String)
  commentId: M:Polkadot.Api.IApplication.GetChildKeys(System.String,System.String)
  id: GetChildKeys(System.String,System.String)
  parent: Polkadot.Api.IApplication
  langs:
  - csharp
  - vb
  name: GetChildKeys(String, String)
  nameWithType: IApplication.GetChildKeys(String, String)
  fullName: Polkadot.Api.IApplication.GetChildKeys(System.String, System.String)
  type: Method
  source:
    remote:
      path: Polkadot/src/Api/Application/IApplication.cs
      branch: Sprint_6_Complitely
      repo: https://github.com/usetech-llc/polkadot_api_dotnet.git
    id: GetChildKeys
    path: src/Api/Application/IApplication.cs
    startLine: 140
  assemblies:
  - Polkadot
  namespace: Polkadot.Api
  summary: "\nCalls storage_getChildKeys RPC method with given child storage key and storage key\n"
  example: []
  syntax:
    content: string GetChildKeys(string childStorageKey, string storageKey)
    parameters:
    - id: childStorageKey
      type: System.String
      description: string with 0x prefixed child storage key hex value
    - id: storageKey
      type: System.String
      description: string with 0x prefixed storage key hex value
    return:
      type: System.String
      description: string response from RPC method
    content.vb: Function GetChildKeys(childStorageKey As String, storageKey As String) As String
  overload: Polkadot.Api.IApplication.GetChildKeys*
- uid: Polkadot.Api.IApplication.GetChildStorage(System.String,System.String)
  commentId: M:Polkadot.Api.IApplication.GetChildStorage(System.String,System.String)
  id: GetChildStorage(System.String,System.String)
  parent: Polkadot.Api.IApplication
  langs:
  - csharp
  - vb
  name: GetChildStorage(String, String)
  nameWithType: IApplication.GetChildStorage(String, String)
  fullName: Polkadot.Api.IApplication.GetChildStorage(System.String, System.String)
  type: Method
  source:
    remote:
      path: Polkadot/src/Api/Application/IApplication.cs
      branch: Sprint_6_Complitely
      repo: https://github.com/usetech-llc/polkadot_api_dotnet.git
    id: GetChildStorage
    path: src/Api/Application/IApplication.cs
    startLine: 148
  assemblies:
  - Polkadot
  namespace: Polkadot.Api
  summary: "\nCalls storage_getChildStorage RPC method with given child storage key and storage key\n"
  example: []
  syntax:
    content: string GetChildStorage(string childStorageKey, string storageKey)
    parameters:
    - id: childStorageKey
      type: System.String
      description: 'string with 0x prefixed child storage key hex value '
    - id: storageKey
      type: System.String
      description: 'string with 0x prefixed storage key hex value '
    return:
      type: System.String
      description: 'string response from RPC method '
    content.vb: Function GetChildStorage(childStorageKey As String, storageKey As String) As String
  overload: Polkadot.Api.IApplication.GetChildStorage*
- uid: Polkadot.Api.IApplication.GetChildStorageHash(System.String,System.String)
  commentId: M:Polkadot.Api.IApplication.GetChildStorageHash(System.String,System.String)
  id: GetChildStorageHash(System.String,System.String)
  parent: Polkadot.Api.IApplication
  langs:
  - csharp
  - vb
  name: GetChildStorageHash(String, String)
  nameWithType: IApplication.GetChildStorageHash(String, String)
  fullName: Polkadot.Api.IApplication.GetChildStorageHash(System.String, System.String)
  type: Method
  source:
    remote:
      path: Polkadot/src/Api/Application/IApplication.cs
      branch: Sprint_6_Complitely
      repo: https://github.com/usetech-llc/polkadot_api_dotnet.git
    id: GetChildStorageHash
    path: src/Api/Application/IApplication.cs
    startLine: 156
  assemblies:
  - Polkadot
  namespace: Polkadot.Api
  summary: "\nCalls storage_getChildStorageHash RPC method with given child storage key and storage key\n"
  example: []
  syntax:
    content: string GetChildStorageHash(string childStorageKey, string storageKey)
    parameters:
    - id: childStorageKey
      type: System.String
      description: 'string with 0x prefixed child storage key hex value '
    - id: storageKey
      type: System.String
      description: 'string with 0x prefixed storage key hex value '
    return:
      type: System.String
      description: 'string response from RPC method '
    content.vb: Function GetChildStorageHash(childStorageKey As String, storageKey As String) As String
  overload: Polkadot.Api.IApplication.GetChildStorageHash*
- uid: Polkadot.Api.IApplication.GetChildStorageSize(System.String,System.String)
  commentId: M:Polkadot.Api.IApplication.GetChildStorageSize(System.String,System.String)
  id: GetChildStorageSize(System.String,System.String)
  parent: Polkadot.Api.IApplication
  langs:
  - csharp
  - vb
  name: GetChildStorageSize(String, String)
  nameWithType: IApplication.GetChildStorageSize(String, String)
  fullName: Polkadot.Api.IApplication.GetChildStorageSize(System.String, System.String)
  type: Method
  source:
    remote:
      path: Polkadot/src/Api/Application/IApplication.cs
      branch: Sprint_6_Complitely
      repo: https://github.com/usetech-llc/polkadot_api_dotnet.git
    id: GetChildStorageSize
    path: src/Api/Application/IApplication.cs
    startLine: 164
  assemblies:
  - Polkadot
  namespace: Polkadot.Api
  summary: "\nCalls storage_getChildStorageSize RPC method with given child storage key and storage key\n"
  example: []
  syntax:
    content: int GetChildStorageSize(string childStorageKey, string storageKey)
    parameters:
    - id: childStorageKey
      type: System.String
      description: 'string with 0x prefixed child storage key hex value '
    - id: storageKey
      type: System.String
      description: 'string with 0x prefixed storage key hex value '
    return:
      type: System.Int32
      description: 'int response from RPC method '
    content.vb: Function GetChildStorageSize(childStorageKey As String, storageKey As String) As Integer
  overload: Polkadot.Api.IApplication.GetChildStorageSize*
- uid: Polkadot.Api.IApplication.QueryStorage(System.String,System.String,System.String,System.Int32)
  commentId: M:Polkadot.Api.IApplication.QueryStorage(System.String,System.String,System.String,System.Int32)
  id: QueryStorage(System.String,System.String,System.String,System.Int32)
  parent: Polkadot.Api.IApplication
  langs:
  - csharp
  - vb
  name: QueryStorage(String, String, String, Int32)
  nameWithType: IApplication.QueryStorage(String, String, String, Int32)
  fullName: Polkadot.Api.IApplication.QueryStorage(System.String, System.String, System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Polkadot/src/Api/Application/IApplication.cs
      branch: Sprint_6_Complitely
      repo: https://github.com/usetech-llc/polkadot_api_dotnet.git
    id: QueryStorage
    path: src/Api/Application/IApplication.cs
    startLine: 174
  assemblies:
  - Polkadot
  namespace: Polkadot.Api
  summary: "\nCalls state_queryStorage RPC method to get historical information about storage at a key\n"
  example: []
  syntax:
    content: StorageItem[] QueryStorage(string key, string startHash, string stopHash, int itemCount)
    parameters:
    - id: key
      type: System.String
      description: 'storage key to query '
    - id: startHash
      type: System.String
      description: 'hash of block to start with '
    - id: stopHash
      type: System.String
      description: 'hash of block to stop at '
    - id: itemCount
      type: System.Int32
      description: 'size of StorageItem elements for retrieve '
    return:
      type: Polkadot.Data.StorageItem[]
      description: 'array of StorageItem elements '
    content.vb: Function QueryStorage(key As String, startHash As String, stopHash As String, itemCount As Integer) As StorageItem()
  overload: Polkadot.Api.IApplication.QueryStorage*
- uid: Polkadot.Api.IApplication.SubscribeBlockNumber(System.Action{System.Int64})
  commentId: M:Polkadot.Api.IApplication.SubscribeBlockNumber(System.Action{System.Int64})
  id: SubscribeBlockNumber(System.Action{System.Int64})
  parent: Polkadot.Api.IApplication
  langs:
  - csharp
  - vb
  name: SubscribeBlockNumber(Action<Int64>)
  nameWithType: IApplication.SubscribeBlockNumber(Action<Int64>)
  fullName: Polkadot.Api.IApplication.SubscribeBlockNumber(System.Action<System.Int64>)
  type: Method
  source:
    remote:
      path: Polkadot/src/Api/Application/IApplication.cs
      branch: Sprint_6_Complitely
      repo: https://github.com/usetech-llc/polkadot_api_dotnet.git
    id: SubscribeBlockNumber
    path: src/Api/Application/IApplication.cs
    startLine: 184
  assemblies:
  - Polkadot
  namespace: Polkadot.Api
  summary: "\nSubscribe to most recent block number.Only one subscription at a time is allowed.If a subscription already \nexists, old subscription will be discarded and replaced with the new one.Until unsubscribeBlockNumber method is\ncalled, the API will be receiving updates and forwarding them to subscribed object/function.Only\nunsubscribeBlockNumber will physically unsubscribe from WebSocket endpoint updates.\n"
  example: []
  syntax:
    content: int SubscribeBlockNumber(Action<long> callback)
    parameters:
    - id: callback
      type: System.Action{System.Int64}
      description: callback - delegate that will receive updates
    return:
      type: System.Int32
      description: 'operation result '
    content.vb: Function SubscribeBlockNumber(callback As Action(Of Long)) As Integer
  overload: Polkadot.Api.IApplication.SubscribeBlockNumber*
  nameWithType.vb: IApplication.SubscribeBlockNumber(Action(Of Int64))
  fullName.vb: Polkadot.Api.IApplication.SubscribeBlockNumber(System.Action(Of System.Int64))
  name.vb: SubscribeBlockNumber(Action(Of Int64))
- uid: Polkadot.Api.IApplication.UnsubscribeBlockNumber(System.Int32)
  commentId: M:Polkadot.Api.IApplication.UnsubscribeBlockNumber(System.Int32)
  id: UnsubscribeBlockNumber(System.Int32)
  parent: Polkadot.Api.IApplication
  langs:
  - csharp
  - vb
  name: UnsubscribeBlockNumber(Int32)
  nameWithType: IApplication.UnsubscribeBlockNumber(Int32)
  fullName: Polkadot.Api.IApplication.UnsubscribeBlockNumber(System.Int32)
  type: Method
  source:
    remote:
      path: Polkadot/src/Api/Application/IApplication.cs
      branch: Sprint_6_Complitely
      repo: https://github.com/usetech-llc/polkadot_api_dotnet.git
    id: UnsubscribeBlockNumber
    path: src/Api/Application/IApplication.cs
    startLine: 191
  assemblies:
  - Polkadot
  namespace: Polkadot.Api
  summary: "\nUnsubscribe from WebSocket endpoint and stop receiving updates with most recent block number.\n"
  example: []
  syntax:
    content: void UnsubscribeBlockNumber(int id)
    parameters:
    - id: id
      type: System.Int32
      description: 'Subscription id '
    content.vb: Sub UnsubscribeBlockNumber(id As Integer)
  overload: Polkadot.Api.IApplication.UnsubscribeBlockNumber*
- uid: Polkadot.Api.IApplication.SubscribeRuntimeVersion(System.Action{Polkadot.Data.RuntimeVersion})
  commentId: M:Polkadot.Api.IApplication.SubscribeRuntimeVersion(System.Action{Polkadot.Data.RuntimeVersion})
  id: SubscribeRuntimeVersion(System.Action{Polkadot.Data.RuntimeVersion})
  parent: Polkadot.Api.IApplication
  langs:
  - csharp
  - vb
  name: SubscribeRuntimeVersion(Action<RuntimeVersion>)
  nameWithType: IApplication.SubscribeRuntimeVersion(Action<RuntimeVersion>)
  fullName: Polkadot.Api.IApplication.SubscribeRuntimeVersion(System.Action<Polkadot.Data.RuntimeVersion>)
  type: Method
  source:
    remote:
      path: Polkadot/src/Api/Application/IApplication.cs
      branch: Sprint_6_Complitely
      repo: https://github.com/usetech-llc/polkadot_api_dotnet.git
    id: SubscribeRuntimeVersion
    path: src/Api/Application/IApplication.cs
    startLine: 205
  assemblies:
  - Polkadot
  namespace: Polkadot.Api
  summary: "\nSubscribe to most recent runtime version.This subscription is necessary for applications that keep connection\nfor a long time.If update about runtime version arrives, it will be necessary to disconnect and reconnect since\nmodule and method indexes might have changed.\n\nOnly one subscription at a time is allowed.If a subscription already\nexists, old subscription will be discarded and replaced with the new one.Until unsubscribeRuntimeVersion method\nis called, the API will be receiving updates and forwarding them to subscribed object/function.Only\nunsubscribeRuntimeVersion will physically unsubscribe from WebSocket endpoint updates.\n"
  example: []
  syntax:
    content: int SubscribeRuntimeVersion(Action<RuntimeVersion> callback)
    parameters:
    - id: callback
      type: System.Action{Polkadot.Data.RuntimeVersion}
      description: 'callback - delegate that will receive updates '
    return:
      type: System.Int32
      description: 'operation result '
    content.vb: Function SubscribeRuntimeVersion(callback As Action(Of RuntimeVersion)) As Integer
  overload: Polkadot.Api.IApplication.SubscribeRuntimeVersion*
  nameWithType.vb: IApplication.SubscribeRuntimeVersion(Action(Of RuntimeVersion))
  fullName.vb: Polkadot.Api.IApplication.SubscribeRuntimeVersion(System.Action(Of Polkadot.Data.RuntimeVersion))
  name.vb: SubscribeRuntimeVersion(Action(Of RuntimeVersion))
- uid: Polkadot.Api.IApplication.UnsubscribeRuntimeVersion(System.Int32)
  commentId: M:Polkadot.Api.IApplication.UnsubscribeRuntimeVersion(System.Int32)
  id: UnsubscribeRuntimeVersion(System.Int32)
  parent: Polkadot.Api.IApplication
  langs:
  - csharp
  - vb
  name: UnsubscribeRuntimeVersion(Int32)
  nameWithType: IApplication.UnsubscribeRuntimeVersion(Int32)
  fullName: Polkadot.Api.IApplication.UnsubscribeRuntimeVersion(System.Int32)
  type: Method
  source:
    remote:
      path: Polkadot/src/Api/Application/IApplication.cs
      branch: Sprint_6_Complitely
      repo: https://github.com/usetech-llc/polkadot_api_dotnet.git
    id: UnsubscribeRuntimeVersion
    path: src/Api/Application/IApplication.cs
    startLine: 211
  assemblies:
  - Polkadot
  namespace: Polkadot.Api
  summary: "\nUnsubscribe from WebSocket endpoint and stop receiving updates with most recent Runtime Version.\n"
  example: []
  syntax:
    content: void UnsubscribeRuntimeVersion(int id)
    parameters:
    - id: id
      type: System.Int32
      description: 'Subscription id '
    content.vb: Sub UnsubscribeRuntimeVersion(id As Integer)
  overload: Polkadot.Api.IApplication.UnsubscribeRuntimeVersion*
references:
- uid: Polkadot.Api
  commentId: N:Polkadot.Api
  name: Polkadot.Api
  nameWithType: Polkadot.Api
  fullName: Polkadot.Api
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Polkadot.Api.IApplication.Connect*
  commentId: Overload:Polkadot.Api.IApplication.Connect
  name: Connect
  nameWithType: IApplication.Connect
  fullName: Polkadot.Api.IApplication.Connect
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Polkadot.Api.IApplication.Disconnect*
  commentId: Overload:Polkadot.Api.IApplication.Disconnect
  name: Disconnect
  nameWithType: IApplication.Disconnect
  fullName: Polkadot.Api.IApplication.Disconnect
- uid: Polkadot.Api.IApplication.GetSystemInfo*
  commentId: Overload:Polkadot.Api.IApplication.GetSystemInfo
  name: GetSystemInfo
  nameWithType: IApplication.GetSystemInfo
  fullName: Polkadot.Api.IApplication.GetSystemInfo
- uid: Polkadot.Data.SystemInfo
  commentId: T:Polkadot.Data.SystemInfo
  parent: Polkadot.Data
  name: SystemInfo
  nameWithType: SystemInfo
  fullName: Polkadot.Data.SystemInfo
- uid: Polkadot.Data
  commentId: N:Polkadot.Data
  name: Polkadot.Data
  nameWithType: Polkadot.Data
  fullName: Polkadot.Data
- uid: Polkadot.Api.IApplication.GetBlockHash*
  commentId: Overload:Polkadot.Api.IApplication.GetBlockHash
  name: GetBlockHash
  nameWithType: IApplication.GetBlockHash
  fullName: Polkadot.Api.IApplication.GetBlockHash
- uid: Polkadot.Data.GetBlockHashParams
  commentId: T:Polkadot.Data.GetBlockHashParams
  parent: Polkadot.Data
  name: GetBlockHashParams
  nameWithType: GetBlockHashParams
  fullName: Polkadot.Data.GetBlockHashParams
- uid: Polkadot.Data.BlockHash
  commentId: T:Polkadot.Data.BlockHash
  parent: Polkadot.Data
  name: BlockHash
  nameWithType: BlockHash
  fullName: Polkadot.Data.BlockHash
- uid: Polkadot.Api.IApplication.GetRuntimeVersion*
  commentId: Overload:Polkadot.Api.IApplication.GetRuntimeVersion
  name: GetRuntimeVersion
  nameWithType: IApplication.GetRuntimeVersion
  fullName: Polkadot.Api.IApplication.GetRuntimeVersion
- uid: Polkadot.Data.GetRuntimeVersionParams
  commentId: T:Polkadot.Data.GetRuntimeVersionParams
  parent: Polkadot.Data
  name: GetRuntimeVersionParams
  nameWithType: GetRuntimeVersionParams
  fullName: Polkadot.Data.GetRuntimeVersionParams
- uid: Polkadot.Data.RuntimeVersion
  commentId: T:Polkadot.Data.RuntimeVersion
  parent: Polkadot.Data
  name: RuntimeVersion
  nameWithType: RuntimeVersion
  fullName: Polkadot.Data.RuntimeVersion
- uid: Polkadot.Api.IApplication.GetBlock*
  commentId: Overload:Polkadot.Api.IApplication.GetBlock
  name: GetBlock
  nameWithType: IApplication.GetBlock
  fullName: Polkadot.Api.IApplication.GetBlock
- uid: Polkadot.Data.GetBlockParams
  commentId: T:Polkadot.Data.GetBlockParams
  parent: Polkadot.Data
  name: GetBlockParams
  nameWithType: GetBlockParams
  fullName: Polkadot.Data.GetBlockParams
- uid: Polkadot.Data.SignedBlock
  commentId: T:Polkadot.Data.SignedBlock
  parent: Polkadot.Data
  name: SignedBlock
  nameWithType: SignedBlock
  fullName: Polkadot.Data.SignedBlock
- uid: Polkadot.Api.IApplication.GetBlockHeader*
  commentId: Overload:Polkadot.Api.IApplication.GetBlockHeader
  name: GetBlockHeader
  nameWithType: IApplication.GetBlockHeader
  fullName: Polkadot.Api.IApplication.GetBlockHeader
- uid: Polkadot.Data.BlockHeader
  commentId: T:Polkadot.Data.BlockHeader
  parent: Polkadot.Data
  name: BlockHeader
  nameWithType: BlockHeader
  fullName: Polkadot.Data.BlockHeader
- uid: Polkadot.Api.IApplication.GetNetworkState*
  commentId: Overload:Polkadot.Api.IApplication.GetNetworkState
  name: GetNetworkState
  nameWithType: IApplication.GetNetworkState
  fullName: Polkadot.Api.IApplication.GetNetworkState
- uid: Polkadot.Data.NetworkState
  commentId: T:Polkadot.Data.NetworkState
  parent: Polkadot.Data
  name: NetworkState
  nameWithType: NetworkState
  fullName: Polkadot.Data.NetworkState
- uid: Polkadot.Api.IApplication.GetFinalizedHead*
  commentId: Overload:Polkadot.Api.IApplication.GetFinalizedHead
  name: GetFinalizedHead
  nameWithType: IApplication.GetFinalizedHead
  fullName: Polkadot.Api.IApplication.GetFinalizedHead
- uid: Polkadot.Data.FinalHead
  commentId: T:Polkadot.Data.FinalHead
  parent: Polkadot.Data
  name: FinalHead
  nameWithType: FinalHead
  fullName: Polkadot.Data.FinalHead
- uid: Polkadot.Api.IApplication.GetMetadata*
  commentId: Overload:Polkadot.Api.IApplication.GetMetadata
  name: GetMetadata
  nameWithType: IApplication.GetMetadata
  fullName: Polkadot.Api.IApplication.GetMetadata
- uid: Polkadot.Data.GetMetadataParams
  commentId: T:Polkadot.Data.GetMetadataParams
  parent: Polkadot.Data
  name: GetMetadataParams
  nameWithType: GetMetadataParams
  fullName: Polkadot.Data.GetMetadataParams
- uid: Polkadot.DataStructs.Metadata.MetadataBase
  commentId: T:Polkadot.DataStructs.Metadata.MetadataBase
  parent: Polkadot.DataStructs.Metadata
  name: MetadataBase
  nameWithType: MetadataBase
  fullName: Polkadot.DataStructs.Metadata.MetadataBase
- uid: Polkadot.DataStructs.Metadata
  commentId: N:Polkadot.DataStructs.Metadata
  name: Polkadot.DataStructs.Metadata
  nameWithType: Polkadot.DataStructs.Metadata
  fullName: Polkadot.DataStructs.Metadata
- uid: Polkadot.Api.IApplication.GetKeys*
  commentId: Overload:Polkadot.Api.IApplication.GetKeys
  name: GetKeys
  nameWithType: IApplication.GetKeys
  fullName: Polkadot.Api.IApplication.GetKeys
- uid: Polkadot.Api.IApplication.GetStorage*
  commentId: Overload:Polkadot.Api.IApplication.GetStorage
  name: GetStorage
  nameWithType: IApplication.GetStorage
  fullName: Polkadot.Api.IApplication.GetStorage
- uid: Polkadot.Api.IApplication.GetStorageHash*
  commentId: Overload:Polkadot.Api.IApplication.GetStorageHash
  name: GetStorageHash
  nameWithType: IApplication.GetStorageHash
  fullName: Polkadot.Api.IApplication.GetStorageHash
- uid: Polkadot.Api.IApplication.GetStorageSize*
  commentId: Overload:Polkadot.Api.IApplication.GetStorageSize
  name: GetStorageSize
  nameWithType: IApplication.GetStorageSize
  fullName: Polkadot.Api.IApplication.GetStorageSize
- uid: Polkadot.Api.IApplication.GetChildKeys*
  commentId: Overload:Polkadot.Api.IApplication.GetChildKeys
  name: GetChildKeys
  nameWithType: IApplication.GetChildKeys
  fullName: Polkadot.Api.IApplication.GetChildKeys
- uid: Polkadot.Api.IApplication.GetChildStorage*
  commentId: Overload:Polkadot.Api.IApplication.GetChildStorage
  name: GetChildStorage
  nameWithType: IApplication.GetChildStorage
  fullName: Polkadot.Api.IApplication.GetChildStorage
- uid: Polkadot.Api.IApplication.GetChildStorageHash*
  commentId: Overload:Polkadot.Api.IApplication.GetChildStorageHash
  name: GetChildStorageHash
  nameWithType: IApplication.GetChildStorageHash
  fullName: Polkadot.Api.IApplication.GetChildStorageHash
- uid: Polkadot.Api.IApplication.GetChildStorageSize*
  commentId: Overload:Polkadot.Api.IApplication.GetChildStorageSize
  name: GetChildStorageSize
  nameWithType: IApplication.GetChildStorageSize
  fullName: Polkadot.Api.IApplication.GetChildStorageSize
- uid: Polkadot.Api.IApplication.QueryStorage*
  commentId: Overload:Polkadot.Api.IApplication.QueryStorage
  name: QueryStorage
  nameWithType: IApplication.QueryStorage
  fullName: Polkadot.Api.IApplication.QueryStorage
- uid: Polkadot.Data.StorageItem[]
  isExternal: true
  name: StorageItem[]
  nameWithType: StorageItem[]
  fullName: Polkadot.Data.StorageItem[]
  nameWithType.vb: StorageItem()
  fullName.vb: Polkadot.Data.StorageItem()
  name.vb: StorageItem()
  spec.csharp:
  - uid: Polkadot.Data.StorageItem
    name: StorageItem
    nameWithType: StorageItem
    fullName: Polkadot.Data.StorageItem
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Polkadot.Data.StorageItem
    name: StorageItem
    nameWithType: StorageItem
    fullName: Polkadot.Data.StorageItem
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Polkadot.Api.IApplication.SubscribeBlockNumber*
  commentId: Overload:Polkadot.Api.IApplication.SubscribeBlockNumber
  name: SubscribeBlockNumber
  nameWithType: IApplication.SubscribeBlockNumber
  fullName: Polkadot.Api.IApplication.SubscribeBlockNumber
- uid: System.Action{System.Int64}
  commentId: T:System.Action{System.Int64}
  parent: System
  definition: System.Action`1
  name: Action<Int64>
  nameWithType: Action<Int64>
  fullName: System.Action<System.Int64>
  nameWithType.vb: Action(Of Int64)
  fullName.vb: System.Action(Of System.Int64)
  name.vb: Action(Of Int64)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Polkadot.Api.IApplication.UnsubscribeBlockNumber*
  commentId: Overload:Polkadot.Api.IApplication.UnsubscribeBlockNumber
  name: UnsubscribeBlockNumber
  nameWithType: IApplication.UnsubscribeBlockNumber
  fullName: Polkadot.Api.IApplication.UnsubscribeBlockNumber
- uid: Polkadot.Api.IApplication.SubscribeRuntimeVersion*
  commentId: Overload:Polkadot.Api.IApplication.SubscribeRuntimeVersion
  name: SubscribeRuntimeVersion
  nameWithType: IApplication.SubscribeRuntimeVersion
  fullName: Polkadot.Api.IApplication.SubscribeRuntimeVersion
- uid: System.Action{Polkadot.Data.RuntimeVersion}
  commentId: T:System.Action{Polkadot.Data.RuntimeVersion}
  parent: System
  definition: System.Action`1
  name: Action<RuntimeVersion>
  nameWithType: Action<RuntimeVersion>
  fullName: System.Action<Polkadot.Data.RuntimeVersion>
  nameWithType.vb: Action(Of RuntimeVersion)
  fullName.vb: System.Action(Of Polkadot.Data.RuntimeVersion)
  name.vb: Action(Of RuntimeVersion)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polkadot.Data.RuntimeVersion
    name: RuntimeVersion
    nameWithType: RuntimeVersion
    fullName: Polkadot.Data.RuntimeVersion
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polkadot.Data.RuntimeVersion
    name: RuntimeVersion
    nameWithType: RuntimeVersion
    fullName: Polkadot.Data.RuntimeVersion
  - name: )
    nameWithType: )
    fullName: )
- uid: Polkadot.Api.IApplication.UnsubscribeRuntimeVersion*
  commentId: Overload:Polkadot.Api.IApplication.UnsubscribeRuntimeVersion
  name: UnsubscribeRuntimeVersion
  nameWithType: IApplication.UnsubscribeRuntimeVersion
  fullName: Polkadot.Api.IApplication.UnsubscribeRuntimeVersion
