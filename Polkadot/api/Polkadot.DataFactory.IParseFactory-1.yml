### YamlMime:ManagedReference
items:
- uid: Polkadot.DataFactory.IParseFactory`1
  commentId: T:Polkadot.DataFactory.IParseFactory`1
  id: IParseFactory`1
  parent: Polkadot.DataFactory
  children:
  - Polkadot.DataFactory.IParseFactory`1.Parse(Newtonsoft.Json.Linq.JObject)
  langs:
  - csharp
  - vb
  name: IParseFactory<T>
  nameWithType: IParseFactory<T>
  fullName: Polkadot.DataFactory.IParseFactory<T>
  type: Interface
  source:
    remote:
      path: Polkadot/src/DataFactory/IParseFactory.cs
      branch: Sprint_6_Complitely
      repo: https://github.com/usetech-llc/polkadot_api_dotnet.git
    id: IParseFactory
    path: src/DataFactory/IParseFactory.cs
    startLine: 4
  assemblies:
  - Polkadot
  namespace: Polkadot.DataFactory
  syntax:
    content: public interface IParseFactory<T>
    typeParameters:
    - id: T
    content.vb: Public Interface IParseFactory(Of T)
  nameWithType.vb: IParseFactory(Of T)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Polkadot.DataFactory.IParseFactory(Of T)
  name.vb: IParseFactory(Of T)
- uid: Polkadot.DataFactory.IParseFactory`1.Parse(Newtonsoft.Json.Linq.JObject)
  commentId: M:Polkadot.DataFactory.IParseFactory`1.Parse(Newtonsoft.Json.Linq.JObject)
  id: Parse(Newtonsoft.Json.Linq.JObject)
  parent: Polkadot.DataFactory.IParseFactory`1
  langs:
  - csharp
  - vb
  name: Parse(JObject)
  nameWithType: IParseFactory<T>.Parse(JObject)
  fullName: Polkadot.DataFactory.IParseFactory<T>.Parse(Newtonsoft.Json.Linq.JObject)
  type: Method
  source:
    remote:
      path: Polkadot/src/DataFactory/IParseFactory.cs
      branch: Sprint_6_Complitely
      repo: https://github.com/usetech-llc/polkadot_api_dotnet.git
    id: Parse
    path: src/DataFactory/IParseFactory.cs
    startLine: 6
  assemblies:
  - Polkadot
  namespace: Polkadot.DataFactory
  syntax:
    content: T Parse(JObject json)
    parameters:
    - id: json
      type: Newtonsoft.Json.Linq.JObject
    return:
      type: '{T}'
    content.vb: Function Parse(json As JObject) As T
  overload: Polkadot.DataFactory.IParseFactory`1.Parse*
  nameWithType.vb: IParseFactory(Of T).Parse(JObject)
  fullName.vb: Polkadot.DataFactory.IParseFactory(Of T).Parse(Newtonsoft.Json.Linq.JObject)
references:
- uid: Polkadot.DataFactory
  commentId: N:Polkadot.DataFactory
  name: Polkadot.DataFactory
  nameWithType: Polkadot.DataFactory
  fullName: Polkadot.DataFactory
- uid: Polkadot.DataFactory.IParseFactory`1.Parse*
  commentId: Overload:Polkadot.DataFactory.IParseFactory`1.Parse
  name: Parse
  nameWithType: IParseFactory<T>.Parse
  fullName: Polkadot.DataFactory.IParseFactory<T>.Parse
  nameWithType.vb: IParseFactory(Of T).Parse
  fullName.vb: Polkadot.DataFactory.IParseFactory(Of T).Parse
- uid: Newtonsoft.Json.Linq.JObject
  commentId: T:Newtonsoft.Json.Linq.JObject
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JObject
  nameWithType: JObject
  fullName: Newtonsoft.Json.Linq.JObject
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Newtonsoft.Json.Linq
  commentId: N:Newtonsoft.Json.Linq
  isExternal: true
  name: Newtonsoft.Json.Linq
  nameWithType: Newtonsoft.Json.Linq
  fullName: Newtonsoft.Json.Linq
- uid: T
  name: T
  nameWithType: T
  fullName: T
