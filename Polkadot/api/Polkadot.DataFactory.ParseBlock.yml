### YamlMime:ManagedReference
items:
- uid: Polkadot.DataFactory.ParseBlock
  commentId: T:Polkadot.DataFactory.ParseBlock
  id: ParseBlock
  parent: Polkadot.DataFactory
  children:
  - Polkadot.DataFactory.ParseBlock.Parse(Newtonsoft.Json.Linq.JObject)
  langs:
  - csharp
  - vb
  name: ParseBlock
  nameWithType: ParseBlock
  fullName: Polkadot.DataFactory.ParseBlock
  type: Class
  source:
    remote:
      path: Polkadot/src/DataFactory/ParseBlock.cs
      branch: Sprint_6_Complitely
      repo: https://github.com/usetech-llc/polkadot_api_dotnet.git
    id: ParseBlock
    path: src/DataFactory/ParseBlock.cs
    startLine: 8
  assemblies:
  - Polkadot
  namespace: Polkadot.DataFactory
  syntax:
    content: 'public class ParseBlock : IParseFactory<SignedBlock>'
    content.vb: >-
      Public Class ParseBlock

          Implements IParseFactory(Of SignedBlock)
  inheritance:
  - System.Object
  implements:
  - Polkadot.DataFactory.IParseFactory{Polkadot.Data.SignedBlock}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Polkadot.DataFactory.ParseBlock.Parse(Newtonsoft.Json.Linq.JObject)
  commentId: M:Polkadot.DataFactory.ParseBlock.Parse(Newtonsoft.Json.Linq.JObject)
  id: Parse(Newtonsoft.Json.Linq.JObject)
  parent: Polkadot.DataFactory.ParseBlock
  langs:
  - csharp
  - vb
  name: Parse(JObject)
  nameWithType: ParseBlock.Parse(JObject)
  fullName: Polkadot.DataFactory.ParseBlock.Parse(Newtonsoft.Json.Linq.JObject)
  type: Method
  source:
    remote:
      path: Polkadot/src/DataFactory/ParseBlock.cs
      branch: Sprint_6_Complitely
      repo: https://github.com/usetech-llc/polkadot_api_dotnet.git
    id: Parse
    path: src/DataFactory/ParseBlock.cs
    startLine: 10
  assemblies:
  - Polkadot
  namespace: Polkadot.DataFactory
  syntax:
    content: public SignedBlock Parse(JObject json)
    parameters:
    - id: json
      type: Newtonsoft.Json.Linq.JObject
    return:
      type: Polkadot.Data.SignedBlock
    content.vb: Public Function Parse(json As JObject) As SignedBlock
  overload: Polkadot.DataFactory.ParseBlock.Parse*
  implements:
  - Polkadot.DataFactory.IParseFactory{Polkadot.Data.SignedBlock}.Parse(Newtonsoft.Json.Linq.JObject)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Polkadot.DataFactory
  commentId: N:Polkadot.DataFactory
  name: Polkadot.DataFactory
  nameWithType: Polkadot.DataFactory
  fullName: Polkadot.DataFactory
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Polkadot.DataFactory.IParseFactory{Polkadot.Data.SignedBlock}
  commentId: T:Polkadot.DataFactory.IParseFactory{Polkadot.Data.SignedBlock}
  parent: Polkadot.DataFactory
  definition: Polkadot.DataFactory.IParseFactory`1
  name: IParseFactory<SignedBlock>
  nameWithType: IParseFactory<SignedBlock>
  fullName: Polkadot.DataFactory.IParseFactory<Polkadot.Data.SignedBlock>
  nameWithType.vb: IParseFactory(Of SignedBlock)
  fullName.vb: Polkadot.DataFactory.IParseFactory(Of Polkadot.Data.SignedBlock)
  name.vb: IParseFactory(Of SignedBlock)
  spec.csharp:
  - uid: Polkadot.DataFactory.IParseFactory`1
    name: IParseFactory
    nameWithType: IParseFactory
    fullName: Polkadot.DataFactory.IParseFactory
  - name: <
    nameWithType: <
    fullName: <
  - uid: Polkadot.Data.SignedBlock
    name: SignedBlock
    nameWithType: SignedBlock
    fullName: Polkadot.Data.SignedBlock
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Polkadot.DataFactory.IParseFactory`1
    name: IParseFactory
    nameWithType: IParseFactory
    fullName: Polkadot.DataFactory.IParseFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Polkadot.Data.SignedBlock
    name: SignedBlock
    nameWithType: SignedBlock
    fullName: Polkadot.Data.SignedBlock
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Polkadot.DataFactory.IParseFactory`1
  commentId: T:Polkadot.DataFactory.IParseFactory`1
  name: IParseFactory<T>
  nameWithType: IParseFactory<T>
  fullName: Polkadot.DataFactory.IParseFactory<T>
  nameWithType.vb: IParseFactory(Of T)
  fullName.vb: Polkadot.DataFactory.IParseFactory(Of T)
  name.vb: IParseFactory(Of T)
  spec.csharp:
  - uid: Polkadot.DataFactory.IParseFactory`1
    name: IParseFactory
    nameWithType: IParseFactory
    fullName: Polkadot.DataFactory.IParseFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Polkadot.DataFactory.IParseFactory`1
    name: IParseFactory
    nameWithType: IParseFactory
    fullName: Polkadot.DataFactory.IParseFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Polkadot.DataFactory.ParseBlock.Parse*
  commentId: Overload:Polkadot.DataFactory.ParseBlock.Parse
  name: Parse
  nameWithType: ParseBlock.Parse
  fullName: Polkadot.DataFactory.ParseBlock.Parse
- uid: Polkadot.DataFactory.IParseFactory{Polkadot.Data.SignedBlock}.Parse(Newtonsoft.Json.Linq.JObject)
  commentId: M:Polkadot.DataFactory.IParseFactory{Polkadot.Data.SignedBlock}.Parse(Newtonsoft.Json.Linq.JObject)
  parent: Polkadot.DataFactory.IParseFactory{Polkadot.Data.SignedBlock}
  definition: Polkadot.DataFactory.IParseFactory`1.Parse(Newtonsoft.Json.Linq.JObject)
  name: Parse(JObject)
  nameWithType: IParseFactory<SignedBlock>.Parse(JObject)
  fullName: Polkadot.DataFactory.IParseFactory<Polkadot.Data.SignedBlock>.Parse(Newtonsoft.Json.Linq.JObject)
  nameWithType.vb: IParseFactory(Of SignedBlock).Parse(JObject)
  fullName.vb: Polkadot.DataFactory.IParseFactory(Of Polkadot.Data.SignedBlock).Parse(Newtonsoft.Json.Linq.JObject)
  spec.csharp:
  - uid: Polkadot.DataFactory.IParseFactory`1.Parse(Newtonsoft.Json.Linq.JObject)
    name: Parse
    nameWithType: IParseFactory<SignedBlock>.Parse
    fullName: Polkadot.DataFactory.IParseFactory<Polkadot.Data.SignedBlock>.Parse
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.Linq.JObject
    name: JObject
    nameWithType: JObject
    fullName: Newtonsoft.Json.Linq.JObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Polkadot.DataFactory.IParseFactory`1.Parse(Newtonsoft.Json.Linq.JObject)
    name: Parse
    nameWithType: IParseFactory(Of SignedBlock).Parse
    fullName: Polkadot.DataFactory.IParseFactory(Of Polkadot.Data.SignedBlock).Parse
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.Linq.JObject
    name: JObject
    nameWithType: JObject
    fullName: Newtonsoft.Json.Linq.JObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JObject
  commentId: T:Newtonsoft.Json.Linq.JObject
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JObject
  nameWithType: JObject
  fullName: Newtonsoft.Json.Linq.JObject
- uid: Polkadot.Data.SignedBlock
  commentId: T:Polkadot.Data.SignedBlock
  parent: Polkadot.Data
  name: SignedBlock
  nameWithType: SignedBlock
  fullName: Polkadot.Data.SignedBlock
- uid: Polkadot.DataFactory.IParseFactory`1.Parse(Newtonsoft.Json.Linq.JObject)
  commentId: M:Polkadot.DataFactory.IParseFactory`1.Parse(Newtonsoft.Json.Linq.JObject)
  isExternal: true
  name: Parse(JObject)
  nameWithType: IParseFactory<T>.Parse(JObject)
  fullName: Polkadot.DataFactory.IParseFactory<T>.Parse(Newtonsoft.Json.Linq.JObject)
  nameWithType.vb: IParseFactory(Of T).Parse(JObject)
  fullName.vb: Polkadot.DataFactory.IParseFactory(Of T).Parse(Newtonsoft.Json.Linq.JObject)
  spec.csharp:
  - uid: Polkadot.DataFactory.IParseFactory`1.Parse(Newtonsoft.Json.Linq.JObject)
    name: Parse
    nameWithType: IParseFactory<T>.Parse
    fullName: Polkadot.DataFactory.IParseFactory<T>.Parse
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.Linq.JObject
    name: JObject
    nameWithType: JObject
    fullName: Newtonsoft.Json.Linq.JObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Polkadot.DataFactory.IParseFactory`1.Parse(Newtonsoft.Json.Linq.JObject)
    name: Parse
    nameWithType: IParseFactory(Of T).Parse
    fullName: Polkadot.DataFactory.IParseFactory(Of T).Parse
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.Linq.JObject
    name: JObject
    nameWithType: JObject
    fullName: Newtonsoft.Json.Linq.JObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq
  commentId: N:Newtonsoft.Json.Linq
  isExternal: true
  name: Newtonsoft.Json.Linq
  nameWithType: Newtonsoft.Json.Linq
  fullName: Newtonsoft.Json.Linq
- uid: Polkadot.Data
  commentId: N:Polkadot.Data
  name: Polkadot.Data
  nameWithType: Polkadot.Data
  fullName: Polkadot.Data
